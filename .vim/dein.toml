[[plugins]]
repo = 'Shougo/dein.vim'

# ddc.vim start
[[plugins]]
repo = 'Shougo/ddc.vim'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-cmdline'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
# ddc.vim end

#colorscheme start
[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'GertjanReynaert/cobalt2-vim-theme'

[[plugins]]
repo = 'haystackandroid/stellarized'

[[plugins]]
repo = 'haystackandroid/nemo'

[[plugins]]
repo = 'ayu-theme/ayu-vim'

[[plugins]]
repo = 'NLKNguyen/papercolor-theme'

[[plugins]]
repo = 'ulwlu/elly.vim'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'savq/melange'

[[plugins]]
repo = 'sainnhe/edge'
# colorscheme end

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'itchyny/vim-gitbranch'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# display match count
[[plugins]]
repo = 'osyo-manga/vim-anzu'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'kana/vim-submode'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'mechatroner/rainbow_csv'

[[plugins]]
repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'haya14busa/vim-asterisk'

[[plugins]]
repo = 'junegunn/fzf'
build = 'bash ./install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'yuki-ycino/fzf-preview.vim'

[[plugins]]
repo = 'lilydjwg/colorizer'
hook_add = '''
    let g:colorizer_maxlines = 500
	let g:colorizer_nomap = 1
'''

[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
    let g:lsp_async_completion = 1
    let g:lsp_diagnostics_enabled = 1
    let g:lsp_signs_enabled = 1
    let g:lsp_diagnostics_echo_cursor = 1
    let g:lsp_diagnostics_virtual_text_enabled = 0
    let g:lsp_highlights_enabled = 1
    let g:lsp_log_verbose = 0
    let g:lsp_textprop_enabled = 1
    let g:lsp_signs_error = {'text': 'x'}
    let g:lsp_signs_warning = {'text': '!'}
    nnoremap <C-l>d :LspDefinition<CR>
    nnoremap <C-l>e :LspNextError<CR>
    nnoremap <C-l>f :LspDocumentFormat<CR>
    nnoremap <C-l>h :LspHover<CR>
    nnoremap <C-l>r :LspReferences<CR>
    nnoremap <C-l>w :LspNextWarning<CR>
'''

# [[plugins]]
# repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'shun/ddc-vim-lsp'

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
hook_add = '''
    map <C-j> <Plug>(edgemotion-j)
    map <C-k> <Plug>(edgemotion-k)
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'

# fern
[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
    let g:fern#default_hidden = 1
    let g:fern#scheme#bookmark#store#file = "~/.fern/bookmark.json"
    nmap <silent><leader>t :Fern . -drawer -toggle<CR>

    function! s:init_fern() abort
        nmap <buffer> s <Nop>
        nmap <buffer> fs <Plug>(fern-action-open:select)
        nmap <silent><buffer> fb :Fern bookmark:///<CR>
        nmap <buffer> fc <Plug>(fern-action-cd) :echo "cd to " . getcwd()<CR>
    endfunction

    augroup fern-custom
        autocmd! *
        autocmd FileType fern call s:init_fern()
    augroup END
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
    let g:fern#renderer = "nerdfont"
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'

[[plugins]]
repo = 'wfxr/minimap.vim'
hook_add = '''
    if !executable('code-minimap')
        !cargo install --locked code-minimap
    endif

    let g:minimap_highlight_range = 1
    let g:minimap_highlight_search = 1
    let g:minimap_git_colors = 1
    noremap <Leader>mt :MinimapToggle<CR>
    noremap <Leader>mr :MinimapRefresh<CR>
'''
hook_post_source = '''
    nmap * <Plug>(asterisk-z*)<Plug>(anzu-update-search-status-with-echo)
    nmap # <Plug>(asterisk-z#)<Plug>(anzu-update-search-status-with-echo)
'''

[[plugins]]
repo = 'vim-skk/skkeleton'
hook_add = '''
    imap <C-j> <Plug>(skkeleton-toggle)
    cmap <C-j> <Plug>(skkeleton-toggle)
    call skkeleton#config({
    \   'eggLikeNewline': v:true,
    \   'globalJisyo': "~/.config/skk/SKK-JISYO.L",
    \   'userJisyo': "~/.config/skk/my_jisyo",
    \   'usePopup': v:false,
    \   'keepState': v:true,
    \ })
    call skkeleton#register_kanatable('rom', {
        \ 'jj': 'escape',
    \ })
'''

[[plugins]]
repo = 'delphinus/skkeleton_indicator.nvim'
hook_add = '''
    highlight SkkeletonIndicatorEiji guifg=#70dcfa guibg=#0d3a58 gui=bold
    highlight SkkeletonIndicatorHira guifg=#95fa3e guibg=#0d3a58 gui=bold
    highlight SkkeletonIndicatorKata guifg=#fdff91 guibg=#0d3a58 gui=bold
    highlight SkkeletonIndicatorHankata guifg=#f279dc guibg=#0d3a58 gui=bold
    highlight SkkeletonIndicatorZenkaku guifg=#4daffa guibg=#0d3a58 gui=bold
    lua require'skkeleton_indicator'.setup{
    \   eijiText = '',
    \   alwaysShown = false,
    \ }
'''

[[plugins]]
repo = 'AndrewRadev/linediff.vim'
hook_add = '''
    let g:linediff_first_buffer_command = 'leftabove new'
    let g:linediff_second_buffer_command = 'rightbelow vertical new'
'''
