[[plugins]]
repo = 'Shougo/dein.vim'

# ddc.vim start
[[plugins]]
repo = 'Shougo/ddc.vim'

[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
    let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-cmdline'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
# ddc.vim end

# ddu.vim start
[[plugins]]
repo = 'Shougo/ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu-source-action'

[[plugins]]
repo = 'shun/ddu-source-buffer'

[[plugins]]
repo = 'shun/ddu-source-rg'

[[plugins]]
repo = 'matsui54/ddu-source-command_history'

[[plugins]]
repo = '4513ECHO/ddu-source-colorscheme'

[[plugins]]
repo = 'matsui54/ddu-source-help'

[[plugins]]
repo = 'Bakudankun/ddu-source-dirmark'

[[plugins]]
repo = 'k-ota106/ddu-source-marks'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-column-filename'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'
# ddu.vim end

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_setConceal = 0
    let g:indentLine_char = 'Â¦'
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# display match count
[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
    nmap n <Plug>(anzu-n-with-echo)
    nmap N <Plug>(anzu-N-with-echo)
    nmap * <Plug>(asterisk-z*)<Plug>(anzu-update-search-status-with-echo)
    nmap # <Plug>(asterisk-z#)<Plug>(anzu-update-search-status-with-echo)
    set statusline=%{anzu#search_status()}
    "hide highlight and anzu-status
    nmap <silent><esc><esc> :nohlsearch<CR><esc> <Plug>(anzu-clear-search-status)
'''

[[plugins]]
repo = 'tpope/vim-commentary'
hook_add = '''
    augroup commentary
        autocmd!
        autocmd FileType cpp let b:commentary_format = '// %s'
        autocmd FileType matlab let b:commentary_format = '% %s'
    augroup END
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    let g:EasyMotion_smartcase = 1
'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'mechatroner/rainbow_csv'

[[plugins]]
repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'haya14busa/vim-asterisk'

[[plugins]]
repo = 'lilydjwg/colorizer'
hook_add = '''
    let g:colorizer_maxlines = 500
	let g:colorizer_nomap = 1
'''

[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
hook_add = '''
    let g:precious_enable_switch_CursorMoved = {
        \ "*": 0,
        \ "help": 1,
        \ "toml": 1,
    \ }

    augroup precious
        autocmd! *
        autocmd InsertEnter * :PreciousSwitch
        autocmd InsertLeave * :PreciousReset
    augroup END
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
hook_add = '''
    nmap <C-j> <Plug>(edgemotion-j)
    nmap <C-k> <Plug>(edgemotion-k)
    vmap <C-j> <Plug>(edgemotion-j)
    vmap <C-k> <Plug>(edgemotion-k)
'''

[[plugins]]
repo = 'lambdalisue/gin.vim'

[[plugins]]
repo = 'goerz/jupytext.vim'
hook_add = '''
    let g:jupytext_fmt = 'py:percent'
    let g:jupytext_filetype_map = {'py': 'python'}
'''

[[plugins]]
repo = 'kmnk/denite-dirmark'
