[[plugins]]
repo = 'Townk/vim-autoclose'
on_event = 'InsertEnter'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = 'markdown'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
hook_source = '''
    nmap <C-p> <Plug>MarkdownPreview
    let g:mkdp_auto_start = 0
    let g:mkdp_auto_close = 0
'''
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'sh -c "cd app && yarn install"'
depends = ['open-browser.vim']

[[plugins]]
repo = 'tani/glance-vim'
hook_source = '''
    let g:glance#markdown_breaks = v:true
    let g:glance#markdown_html = v:true
    let g:glance#markdown_linkify = v:true
    let g:glance#stylesheet = '@import url("https://cdn.jsdelivr.net/npm/water.css@2/out/water.css");'
    let g:glance#markdown_plugins = [
        \ 'https://esm.sh/markdown-it-emoji',
        \ 'https://esm.sh/markdown-it-mathjax3?bundle',
    \ ]
'''
#end markdown

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = 'python'
hook_source = '''
    let g:virtualenv_directory = '.'
'''

[[plugins]]
repo = 'rhysd/reply.vim'
on_cmd = ['Repl', 'ReplAuto']

[[plugins]]
repo = 'AndrewRadev/linediff.vim'
on_event = 'BufEnter'
hook_add = '''
    let g:linediff_first_buffer_command = 'leftabove new'
    let g:linediff_second_buffer_command = 'rightbelow vertical new'
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
    let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'jupyter-vim/jupyter-vim'
on_event = 'BufEnter'
hook_add = '''
    nnoremap <buffer> <silent> <leader>jc :JupyterConnect<CR>
    nnoremap <buffer> <silent> <leader>jd :JupyterDiconnect<CR>
    nnoremap <buffer> <silent> <leader>js :JupyterSendCell<CR>
    nnoremap <buffer> <silent> <leader>jr :JupyterSendRange<CR>
    vnoremap <buffer> <silent> <leader>jr :JupyterSendRange<CR>
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
merged = 0
on_event = 'BufRead'
hook_source = 'source ~/dotfiles/.vim/nvim-treesitter.lua'
# hook_post_update = 'TSUpdate'

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_add = '''
    let g:vimtex_compiler_latexmk = {
        \ 'build_dir' : '',
        \ 'callback' : 1,
        \ 'continuous' : 1,
        \ 'executable' : 'latexmk',
        \ 'hooks' : [],
        \ 'options' : [
        \   '-pdfdvi',
        \   '-verbose',
        \   '-file-line-error',
        \   '-synctex=1',
        \   '-interaction=nonstopmode',
        \ ],
        \}
'''

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_event = 'BufEnter'

[[plugins]]
repo = 'williamboman/mason.nvim'
on_event = 'VimEnter'
hook_source = '''
    source ~/dotfiles/.vim/nvim-lsp.lua
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
on_source = ['mason.nvim']
hook_source = '''
    autocmd FileType lspinfo nnoremap <buffer><silent> q :close<CR>
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_source = ['mason.nvim']

[[plugins]]
repo = 'onsails/lspkind.nvim'
on_source = ['mason.nvim']

[[plugins]]
repo = 'kkharji/lspsaga.nvim'
on_source = ['mason.nvim']

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_event = 'BufEnter'
hook_source = '''
    call signature_help#enable()
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_event = 'BufEnter'
hook_source = '''
    call popup_preview#enable()
'''

[[plugins]]
repo = 'folke/trouble.nvim'
on_event = 'BufEnter'
hook_add = '''
    nnoremap <C-l>t :TroubleToggle<CR>
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_event = 'VimEnter'
hook_add = '''
    let g:deol#enable_ddc_completion = v:true
    let g:deol#floating_border = 'single'
    tnoremap <Esc> <C-\><C-n>

    function! s:set_deol_win_pos() abort
        let s:deol_win_pos = {
            \ 'winWidth': float2nr(&columns * 0.9),
            \ 'winCol': float2nr(&columns * 0.05),
            \ 'winHeight': float2nr(&lines * 0.6),
            \ 'winRow': float2nr(&lines * 0.2),
        \ }
    endfunction

    augroup AutoResizeDeolWinPos
        autocmd!
        autocmd VimEnter,VimResized * call s:set_deol_win_pos()
    augroup END

    nnoremap <silent>,z :<C-u>call <SID>deol_zsh()<CR>
    function! s:deol_zsh() abort
        execute 'Deol zsh -split=floating -start-insert=v:false -edit=v:true' .
                \ ' -winwidth=' . s:deol_win_pos['winWidth']
                \ ' -wincol=' . s:deol_win_pos['winCol']
                \ ' -winheight=' . s:deol_win_pos['winHeight']
                \ ' -winrow=' . s:deol_win_pos['winRow']
    endfunction
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_event = 'BufEnter'
hook_add = '''
    nmap ga <Plug>(EasyAlign)
    xmap ga <Plug>(EasyAlign)
'''
