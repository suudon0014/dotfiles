[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
    let g:neosnippet#disable_runtime_snippets = {
        \ 'text': 1,
        \ 'markdown': 1,
    \ }
    let g:neosnippet#snippets_directory='~/dotfiles/.vim/neosnippet/'
'''
on_event = 'InsertEnter'
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_event = 'InsertEnter'

[[plugins]]
repo = 'Townk/vim-autoclose'
on_event = 'InsertEnter'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = 'markdown'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
hook_source = '''
    nmap <C-p> <Plug>MarkdownPreview
    let g:mkdp_auto_start = 0
    let g:mkdp_auto_close = 0
'''
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app & yarn install'
depends = ['vim-markdown', 'open-browser.vim']
#end markdown

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = 'python'
hook_source = '''
    let g:virtualenv_directory = '.'
'''

[[plugins]]
repo = 'rhysd/reply.vim'
on_cmd = ['Repl', 'ReplAuto']

[[plugins]]
repo = 'mattn/vim-lsp-settings'
on_event = 'VimEnter'
hook_source = '''
let g:lsp_settings = {
\   'clangd': {
\       'args': ['--all-scopes-completion', '--background-index', '--clang-tidy', '--limit-references=0', '--limit-results=0'],
\   },
\ }
'''
