[[plugins]]
repo = 'Shougo/dein.vim'

# ddc.vim start
[[plugins]]
repo = 'Shougo/ddc.vim'

[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
    let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-cmdline'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
# ddc.vim end

# ddu.vim start
[[plugins]]
repo = 'Shougo/ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
[plugins.ftplugin]
ddu-ff = '''
    nnoremap <buffer><silent> <CR> <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
    nnoremap <buffer><silent> s <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'open', 'params': {'command': 'split'}})<CR>
    nnoremap <buffer><silent> v <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
    nnoremap <buffer><silent> x <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
    nnoremap <buffer><silent> a <Cmd>call ddu#ui#ff#do_action('toggleAllItems')<CR>
    nnoremap <buffer><silent> r <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'rename'})<CR>
    nnoremap <buffer><silent> f <Cmd>call ddu#ui#ff#do_action('refreshItems')<CR>
    nnoremap <buffer><silent> c <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
    nnoremap <buffer><silent> d <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'delete'})<CR>
    nnoremap <buffer><silent> e <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'edit'})<CR>
    nnoremap <buffer><silent> t <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'tabopen'})<CR>
    nnoremap <buffer><silent> p <Cmd>call ddu#ui#ff#do_action('preview')<CR>
    nnoremap <buffer><silent> i <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
    nnoremap <buffer><silent> <leader>y <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'yank'})<CR>
    nnoremap <buffer><silent> <leader>l <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'loclist'})<CR>
    nnoremap <buffer><silent> <leader>q <Cmd>call ddu#ui#ff#do_action('itemAction', {'name': 'quickfix'})<CR>
    nnoremap <buffer><silent> q <Cmd>call ddu#ui#ff#do_action('quit')<CR>
    nnoremap <buffer> <Esc><Esc> <Nop>
'''

ddu-ff-filter = '''
    inoremap <buffer> <CR> <Esc><Cmd>call ddu#ui#ff#close()<CR>
    nnoremap <buffer> <CR> <Cmd>call ddu#ui#ff#close()<CR>
    nnoremap <buffer> q <Cmd>call ddu#ui#ff#close()<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
[plugins.ftplugin]
ddu-filer = '''
    nnoremap <buffer> * <Cmd>call ddu#ui#filer#do_action('toggleAllItems')<CR>
    nnoremap <buffer> a <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
    nnoremap <buffer> b <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'dirmark'})<CR>
    nnoremap <buffer> c <Cmd>call ddu#ui#filer#multi_actions([
        \ ['itemAction', {'name': 'copy'}],
        \ ['clearSelectAllItems'],
    \ ])<CR>
    nnoremap <buffer> C <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'cd'})<CR>
    nnoremap <buffer> d <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'trash'})<CR>
    nnoremap <buffer> D <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'delete'})<CR>
    nnoremap <buffer> h <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': '..'}})<CR>
    nnoremap <buffer> I <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow',
        \ 'params': {'path': fnamemodify(input('New cwd: ', b:ddu_ui_filer_path, 'dir'), ':p')}})<CR>
    nnoremap <buffer> K <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'newDirectory'})<CR>
    nnoremap <buffer> m <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'move'})<CR>
    nnoremap <buffer> N <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'newFile'})<CR>
    nnoremap <buffer> o <Cmd>call ddu#ui#filer#do_action('expandItem', {'mode': 'toggle'})<CR>
    nnoremap <buffer> O <Cmd>call ddu#ui#filer#do_action('expandItem', {'maxLevel': -1})<CR>
    nnoremap <buffer> p <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'paste'})<CR>
    nnoremap <buffer> q <Cmd>call ddu#ui#ff#do_action('quit')<CR>
    nnoremap <buffer> r <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'rename'})<CR>
    nnoremap <buffer> x <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
    nnoremap <buffer> y <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'yank'})<CR>
    nnoremap <buffer> <leader>l <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'loclist'})<CR>
    nnoremap <buffer> <leader>q <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'quickfix'})<CR>
    nnoremap <buffer> <C-l> <Cmd>call ddu#ui#filer#do_action('checkItems')<CR>
    nnoremap <buffer><expr> s ddu#ui#filer#is_directory() ? "" : "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open', 'params': {'command': 'split'}})<CR>"
    nnoremap <buffer><expr> v ddu#ui#filer#is_directory() ? "" : "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open', 'params': {'command': 'vsplit'}})<CR>"
    nnoremap <buffer> ~ <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': expand('~')}})<CR>
    nnoremap <buffer> > <Cmd>call ddu#ui#filer#do_action('updateOptions',
        \ {'sourceOptions': {'file': {'matchers': ToggleHidden('file')}}})<CR>
    nnoremap <buffer><expr> <CR> ddu#ui#filer#is_directory() ?
        \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow'})<CR>" :
        \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open'})<CR>"
    nnoremap <buffer> <Esc><Esc> <Nop>

    function! ToggleHidden(name)
        let current = ddu#custom#get_current(b:ddu_ui_name)
        let source_options = get(current, 'sourceOptions', {})
        let source_options_name = get(source_options, a:name, {})
        let matchers = get(source_options_name, 'matchers', [])
        return empty(matchers) ? ['matcher_hidden'] : []
    endfunction

    autocmd TabEnter,CursorHold,FocusGained <buffer> call ddu#ui#filer#do_action('checkItems')
'''

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu-source-action'

[[plugins]]
repo = 'shun/ddu-source-buffer'

[[plugins]]
repo = 'shun/ddu-source-rg'

[[plugins]]
repo = 'matsui54/ddu-source-command_history'

[[plugins]]
repo = '4513ECHO/ddu-source-colorscheme'

[[plugins]]
repo = 'matsui54/ddu-source-help'

[[plugins]]
repo = 'Bakudankun/ddu-source-dirmark'

[[plugins]]
repo = 'k-ota106/ddu-source-marks'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-column-filename'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'
# ddu.vim end
