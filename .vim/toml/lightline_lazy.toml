[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['sonokai']
on_event = ['InsertEnter', 'BufReadPost', 'BufNewFile']
lua_source = '''
    local lightline_colorscheme = 'sonokai'
    vim.g.lightline = {
        colorscheme = lightline_colorscheme,
        mode_map = {c = 'NORMAL'},
        active = {
          left = {{'mode', 'paste'}, {'gitbranch', 'filename'}},
          right = {{'lineinfo', 'percent'}, {'fileformat', 'fileencoding', 'filetype'}}
        },
        inactive = {
          left = {{'filename'}},
          right = {{'lineinfo', 'percent'}, {'filetype'}}
        },
        component = {
          lineinfo = '%3l:%-2v',
        },
        component_function = {
          modified = 'LightlineModified',
          gitbranch = 'LightlineGitbranch',
          fileformat = 'LightlineFileformat',
          filetype = 'LightlineFiletype',
          fileencoding = 'LightlineFileencoding',
          filename = 'LightlineFilename',
          mode = 'LightlineMode',
        },
    }

    if vim.fn.has('gui_running') == 1 then
        local tmp = vim.g.lightline
        tmp.component.lineinfo = "\u{e0a1} " .. '%3l:%-2v'
        tmp.separator = {left = "\u{e0b0} ", right = "\u{e0b2} "}
        tmp.subseparator = {left = "\u{e0b1} ", right = "\u{e0b3} "}
        tmp.component_function.readonly = 'LightlineReadonly'
        vim.g.lightline = tmp
    end

    local palette = vim.api.nvim_eval('g:lightline#colorscheme#' .. lightline_colorscheme .. '#palette')
    local setPalletTablineVar = 'let g:lightline#colorscheme#' .. lightline_colorscheme .. '#palette.tabline'
    vim.api.nvim_exec2(setPalletTablineVar .. [=[.tabsel = [["#444444", "#8ac6f2", "0", "39"]] ]=], {})
    vim.api.nvim_exec2(setPalletTablineVar .. [=[.right = [['#002b36', '#93a1a1', '234', '245'], ['#002b36', '#93a1a1', '234', '245']] ]=], {})
    vim.api.nvim_exec2(setPalletTablineVar .. [=[.middle = [['#93a1a1', '#002b36', '245', '234']] ]=], {})
    vim.api.nvim_exec2(setPalletTablineVar .. [=[.left = [['#002b36', '#93a1a1', '234', '245']] ]=], {})
'''

hook_source = '''
    " functions and commands
    function! LightlineModified()
      return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
    endfunction

    function! LightlineGitbranch()
        let l:branch_name = gitbranch#name()
        if winwidth(0) < 60
            return ''
        elseif l:branch_name != ''
            if has('gui_running')
                return "\ue725 " . l:branch_name
            else
                return l:branch_name
            endif
        else
            return ''
        endif
    endfunction

    function! LightlineFileformat()
        return winwidth(0) > 70 ? &fileformat : ''
    endfunction

    function! LightlineFiletype()
        return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
    endfunction

    function! LightlineFileencoding()
        return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
    endfunction

    function! LightlineMode()
        if winwidth(0) <= 40
            let l:mode = ''
        else
            let l:mode = lightline#mode()

            if mode()[0] ==# 'i'
                let l:skk_mode = skkeleton#mode()
                if l:skk_mode ==# ''
                    let l:skk_label = 'A'
                elseif l:skk_mode ==# "hira"
                    let l:skk_label = 'あ'
                elseif l:skk_mode ==# "kata"
                    let l:skk_label = 'ア'
                elseif l:skk_mode ==# "hankata"
                    let l:skk_label = 'ｱ'
                elseif l:skk_mode ==# "zenkaku"
                    let l:skk_label = 'Ａ'
                elseif l:skk_mode ==# "abbrev"
                    let l:skk_label = 'Abr'
                endif

                let l:mode = l:mode . '[' . l:skk_label . ']'
            endif
        endif

        return l:mode
    endfunction

    function! LightlineReadonly()
        return &readonly ? "\uf023 " : ''
    endfunction

    function! LightlineFilename()
        return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
            \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
            \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
    endfunction

    "reload lightline settings
    command! LightlineReload call LightlineReload()
    function! LightlineReload()
        call lightline#init()
        call lightline#colorscheme()
        call lightline#update()
    endfunction
'''

[[plugins]]
repo = 'itchyny/vim-gitbranch'
on_source = ['lightline.vim']

